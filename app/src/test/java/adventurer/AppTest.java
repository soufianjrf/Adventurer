/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package adventurer;

import org.junit.jupiter.api.Test;

import adventurer.exceptions.InvalidPositionException;
import adventurer.game.Adventurer;
import adventurer.game.Forest;
import adventurer.geometry.Point;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.BeforeEach;

class AppTest {

    private Forest forest;

    @BeforeEach
    void setUp() {
        forest = new Forest("carte.txt");
    }

    @Test
    // Testing the initial position
    void shouldNotAllowIllegalInitialPosition() {
        assertThrows(InvalidPositionException.class, () -> {
            new Adventurer(0, 0, forest);
        });
        assertThrows(InvalidPositionException.class, () -> {
            new Adventurer(3, 10000, forest);
        });
        assertThrows(InvalidPositionException.class, () -> {
            new Adventurer(10000, 0, forest);
        });
    }

    @Test
    void shouldPutAdventurerInCorrectInitialPosition() {
        Adventurer hero = new Adventurer(3, 0, forest);
        assertEquals(hero.coordinates.getX(), 3);
        assertEquals(hero.coordinates.getY(), 0);
    }

    @Test
    // Testing the canAdvance() method
    void shouldFindObstacles() {
        Point initialCoords = new Point(3, 0);
        Adventurer hero = new Adventurer(initialCoords, forest);

        assertFalse(hero.canAdvance('N'));
        assertTrue(hero.canAdvance('S'));
        assertTrue(hero.canAdvance('E'));
        assertFalse(hero.canAdvance('O'));

    }

    @Test
    // Testing the final position after moving
    void shouldAvoidObstaclesAndAdvance() {
        Adventurer hero = new Adventurer(3, 0, forest);
        hero.advance("SSSSEEEEEENN");

        assertEquals(hero.coordinates.getX(), 9);
        assertEquals(hero.coordinates.getY(), 2);

    }
}
